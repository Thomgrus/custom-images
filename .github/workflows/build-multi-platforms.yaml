name: Build multi platforms

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  # ------------------------
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: package
        name: Get all app
        run: |
          APPS=$(find . -name '*Dockerfile' | jq --raw-input --slurp 'split("/Dockerfile\n")' | jq -c '[.[][2:]] | map(select(length > 0))')
          echo ::set-output name=apps::${APPS}
    outputs:
      apps: ${{ steps.package.outputs.apps }}
  # ------------------------
  build:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        app: ${{ fromJSON(needs.prepare.outputs.apps) }}
      fail-fast: false
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.1
        with:
          paths: '["${{ matrix.app }}/**"]'
          skip_after_successful_duplicate: 'false'
      - name: Checkout
        if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        uses: actions/checkout@v2
      - name: Login to DockerHub
        if: ${{ steps.skip_check.outputs.should_skip != 'true' && github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.app }}
          file: ${{ matrix.app }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: aligor/${{ matrix.app }}, aligor/${{github.sha}}
